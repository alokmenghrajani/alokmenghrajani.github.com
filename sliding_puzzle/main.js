(()=>{var t={888:t=>{class e{static frameInterval=15;static colors=["rgb(30,144,255)","rgba(107,142,35)","rgba(255,215,0)","rgba(255,192,203)","rgba(106,90,205)","rgba(173,216,230)","rgba(238,130,238)","rgba(152,251,152)","rgba(70,130,180)","rgba(244,164,96)","rgba(210,105,30)","rgba(220,20,60)"];constructor(t,e){this.isRunning=!1,this.particles=[],this.waveAngle=0,this.context=null,this.count=0}reset(t,s,i){return t.color=e.colors[Math.random()*e.colors.length|0],t.x=Math.random()*s,t.y=Math.random()*i-i,t.diameter=10*Math.random()+5,t.tilt=10*Math.random()-10,t.tiltAngleIncrement=.07*Math.random()+.05,t.tiltAngle=Math.random()*Math.PI,t}go(){0==this.particles.length?this.context.clearRect(0,0,window.innerWidth,window.innerHeight):(this.context.clearRect(0,0,window.innerWidth,window.innerHeight),this.update(),this.draw(this.context),window.requestAnimationFrame((()=>this.go())))}start(t){const e=window.innerWidth,s=window.innerHeight,i=document.createElement("canvas");for(i.setAttribute("id","confetti-canvas"),i.setAttribute("style","display:block;z-index:999999;pointer-events:none;position:fixed;top:0"),document.body.prepend(i),i.width=e,i.height=s,window.addEventListener("resize",(function(){i.width=window.innerWidth,i.height=window.innerHeight}),!0),this.context=i.getContext("2d"),this.count=Math.sqrt(i.width*i.height)/4;this.particles.length<this.count;)this.particles.push(this.reset({},e,s));this.isRunning=!0,this.go(),t&&window.setTimeout((()=>this.isRunning=!1),t)}draw(t){for(let e=0;e<this.particles.length;e++){const s=this.particles[e];t.beginPath(),t.lineWidth=s.diameter;const i=s.x+s.tilt,o=i+s.diameter/2,r=s.y+s.tilt+s.diameter/2;t.strokeStyle=s.color,t.moveTo(o,s.y),t.lineTo(i,r),t.stroke()}}update(){const t=window.innerWidth,e=window.innerHeight;this.waveAngle+=.01;for(let s=0;s<this.particles.length;s++){let i=this.particles[s];!this.isRunning&&i.y<-15?i.y=e+100:(i.tiltAngle+=i.tiltAngleIncrement,i.x+=Math.sin(this.waveAngle)-.5,i.y+=.5*(Math.cos(this.waveAngle)+i.diameter+2),i.tilt=15*Math.sin(i.tiltAngle)),(i.x>t+20||i.x<-20||i.y>e)&&(this.isRunning&&this.particles.length<=this.count?this.reset(i,t,e):(this.particles.splice(s,1),s--))}}}t.exports=e},255:(t,e,s)=>{const{positiveMod:i}=s(288),o=s(888);s.g.conf=o,t.exports=class{constructor(t,e,s){this.puzzle=t,this.rows=this.puzzle.rows,this.cols=this.puzzle.cols,this.board=e,this.goal=s,this.dragging=null,this.pointerId=null,this.dragStart=[0,0],this.colorMap={},this.colorMap.A="#b7e5dd",this.colorMap.B="#9a86a4",this.colorMap.C="#b1bce6";const i=Math.hypot(this.rows,this.cols);for(let t=0;t<this.cols;t++)for(let e=0;e<this.rows;e++){const s=e*this.cols+t+1,o=Math.hypot(this.cols-t,this.rows-e)/i,r="rgba("+[0+224*o,64+160*o,112+112*o].join()+")";this.colorMap[s]=r}this.createGrid(),this.createGoal(),this.initKeys(),document.onpointermove=t=>this.handleMove(t),document.onpointerup=t=>this.handleEnd(t),document.onkeydown=t=>this.handleKey(t)}createGrid(){this.offsets={},this.divs={};const t=[];for(let e=-this.cols;e<2*this.cols;e++)for(let s=-this.rows;s<2*this.rows;s++)t.push(this.createCell(e,s,this.puzzle.state[i(s,this.rows)][i(e,this.cols)]));this.board.replaceChildren(...t);const e=this.puzzle.solved();this.board.className=e?"solved":"unsolved",e&&(new o).start(1e4)}createCell(t,e,s){const i=document.createElement("div");return i.innerText=s,i.style.left=this.offsetToPercentage(t,this.cols),i.style.top=this.offsetToPercentage(e,this.rows),i.style.width=100/this.cols+"%",i.style.height=100/this.rows+"%",i.style.backgroundColor=this.colorMap[s],i.id="cell_"+this.offsetToStr(t,e),i.onpointerdown=t=>this.handleStart(t),this.offsets[i.id]=[t,e],this.divs[this.offsetToStr(t,e)]=i,i}offsetToPercentage(t,e){return 100*t/e+"%"}offsetToStr(t,e){return 100*t+e}createGoal(){for(let t=0;t<this.cols;t++)for(let e=0;e<this.rows;e++)this.createGoalCell(t,e,this.puzzle.target[e][t])}createGoalCell(t,e,s){const i=document.createElement("div");i.innerText=s,i.style.left=this.offsetToPercentage(t,this.cols),i.style.top=this.offsetToPercentage(e,this.rows),i.style.width=100/this.cols+"%",i.style.height=100/this.rows+"%",i.style.backgroundColor=this.colorMap[s],this.goal.appendChild(i)}handleStart(t){if(null!=this.dragging)return!1;if(this.puzzle.solved())return!1;const e=board.getBoundingClientRect();return this.dragStart=[t.clientX-e.x,t.clientY-e.y],this.pointerId=t.pointerId,this.dragging=t.srcElement,t.preventDefault(),!1}handleMove(t){if(null==this.dragging)return!1;if(t.pointerId!=this.pointerId)return!1;const e=this.board.getBoundingClientRect(),s=t.clientX-e.x,i=t.clientY-e.y;let o=s-this.dragStart[0],r=i-this.dragStart[1];const n=this.offsetToX(this.cols-.5);o>n&&(o=n),o<-n&&(o=-n);const h=this.offsetToY(this.rows-.5);return r>h&&(r=h),r<-h&&(r=-h),this.resetNodes(),Math.abs(o)>Math.abs(r)?this.puzzle.rowGroup(this.offsets[this.dragging.id][1]).flatMap((t=>this.findHorzNodes(t))).forEach((t=>{t.style.left=this.offsetToX(this.offsets[t.id][0])+o})):this.puzzle.colGroup(this.offsets[this.dragging.id][0]).flatMap((t=>this.findVertNodes(t))).forEach((t=>{t.style.top=this.offsetToY(this.offsets[t.id][1])+r})),t.preventDefault(),!1}handleEnd(t){if(null==this.dragging)return!1;const e=this.board.getBoundingClientRect(),s=t.clientX-e.x,i=t.clientY-e.y;let o=s-this.dragStart[0],r=i-this.dragStart[1];const n=this.offsetToX(this.cols-.5);o>n&&(o=n),o<-n&&(o=-n);const h=this.offsetToY(this.rows-.5);if(r>h&&(r=h),r<-h&&(r=-h),this.resetNodes(),Math.abs(o)>Math.abs(r)){const t=this.board.getBoundingClientRect();o=Math.round(o*this.cols/t.width),this.puzzle.moveHorz(this.offsets[this.dragging.id][1],o)}else{const t=this.board.getBoundingClientRect();r=Math.round(r*this.rows/t.height),this.puzzle.moveVert(this.offsets[this.dragging.id][0],r)}return this.createGrid(),this.dragging=null,t.preventDefault(),!1}initKeys(){this.keys={};for(let t=0;t<this.cols;t++)this.keys[49+t]=[1,t,1];const t=[84,71,66,89,72,78];for(let e=0;e<this.rows;e++)this.keys[t[e]]=[0,e,1]}handleKey(t){const e=[(t,e)=>{this.puzzle.moveHorz(t,e)},(t,e)=>{this.puzzle.moveVert(t,e)}];if(t.keyCode in this.keys){{let s=this.keys[t.keyCode],i=1;t.shiftKey&&(i=-1),e[s[0]](s[1],i*s[2])}this.createGrid(),t.preventDefault()}}resetNodes(){let t=this.puzzle.rowGroup(this.offsets[this.dragging.id][1]).flatMap((t=>this.findHorzNodes(t)));t.forEach((t=>t.style.left=this.offsetToX(this.offsets[t.id][0]))),t=this.puzzle.colGroup(this.offsets[this.dragging.id][0]).flatMap((t=>this.findVertNodes(t))),t.forEach((t=>t.style.top=this.offsetToY(this.offsets[t.id][1])))}findHorzNodes(t){const e=[];for(let s=-this.cols;s<2*this.cols;s++)e.push(this.divs[this.offsetToStr(s,t)]);return e}findVertNodes(t){const e=[];for(let s=-this.rows;s<2*this.rows;s++)e.push(this.divs[this.offsetToStr(t,s)]);return e}offsetToX(t){const e=this.board.offsetWidth-this.board.clientWidth;return t*(this.board.getBoundingClientRect().width-e)/this.cols}offsetToY(t){const e=this.board.offsetHeight-this.board.clientHeight;return t*(this.board.getBoundingClientRect().height-e)/this.rows}}},67:(t,e,s)=>{const{positiveMod:i,randInt:o}=s(288);t.exports={Puzzle:class{constructor(t,e){this.target=t,this.state=JSON.parse(JSON.stringify(t)),this.rows=this.state.length,this.cols=this.state[0].length,this.difficulty=e}shuffle(t){for(let e=0;e<t;e++){const t=2*o(2)-1;if(Math.random()>.5){const e=o(this.rows);this.moveHorz(e,t)}else{const e=o(this.cols);this.moveVert(e,t)}}}solved(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.cols;e++)if(this.state[t][e]!=this.target[t][e])return!1;return!0}rowColGroup(t,e){const s=Math.floor(t/e),i=[];for(let t=0;t<e;t++)i[t]=s*e+t;return i}rowGroup(t){return this.rowColGroup(t,this.difficulty.height)}colGroup(t){return this.rowColGroup(t,this.difficulty.width)}moveHorz(t,e){this.rowGroup(t).forEach((t=>this.moveSingleRowHorz(t,e)))}moveSingleRowHorz(t,e){let s=[];for(let o=0;o<this.cols;o++)s[o]=this.state[t][i(o-e,this.cols)];this.state[t]=s}moveVert(t,e){this.colGroup(t).forEach((t=>this.moveSingleColVert(t,e)))}moveSingleColVert(t,e){let s=[];for(let o=0;o<this.rows;o++)s[o]=this.state[i(o-e,this.rows)][t];for(let e=0;e<this.rows;e++)this.state[e][t]=s[e]}},Difficulty:class{constructor(t,e){this.height=t,this.width=e}}}},288:t=>{t.exports={positiveMod:function(t,e){const s=t%e;return s<0?s+Math.abs(e):s},randInt:function(t){return Math.floor(Math.random()*t)}}}},e={};function s(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={exports:{}};return t[i](r,r.exports,s),r.exports}s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{const{Puzzle:t,Difficulty:e}=s(67),i=s(255);function o(){const t=s.g.container.getBoundingClientRect(),e=s.g.board,i=s.g.goal;if(t.width>t.height){const s=0|Math.min(t.height,.66*(t.width-10));e.style.width=s,e.style.height=s,i.style.width=s/3,i.style.height=s/3,i.style.left=s+10,i.style.top=2*s/3}else{const s=0|Math.min(t.width,.66*(t.height-10));e.style.width=s,e.style.height=s,i.style.width=s/3,i.style.height=s/3,i.style.left=2*s/3,i.style.top=s+10}}function r(s,i,o,r,n){const h=new Array(s);for(let t=0;t<s;t++){h[t]=new Array(i);for(let e=0;e<i;e++){let s;s=0==o?i*t+e+1:"ABCDEFGHIJK"[(t+e)%o],h[t][e]=s}}const l=new e(r,n),a=new t(h,l);return a.shuffle(100),a}function n(t){let e,o;switch(t){case"easy":e=r(4,4,2,1,1),o="Easy";break;case"medium":e=r(4,4,0,1,1),o="Medium";break;case"hard":e=r(4,4,0,2,2),o="Hard";break;case"6x6 easy":e=r(6,6,0,2,2),o="6x6 easy";break;case"6x6 medium":e=r(6,6,3,3,3),o="6x6 medium";break;case"6x6 hard":e=r(6,6,0,3,3),o="6x6 hard"}new i(e,board,goal),s.g.footer.innerText="Current level: "+o}window.onload=()=>o(),window.onresize=()=>o(),o(),n("easy"),s.g.showInstructions.onclick=t=>{document.body.classList.add("hide"),s.g.instr.classList.add("enabled")},s.g.instr.onclick=()=>{document.body.classList.remove("hide"),s.g.instr.classList.remove("enabled")},s.g.showLevels.onclick=()=>{document.body.classList.add("hide"),s.g.levels.classList.add("enabled")},s.g.easy.onclick=()=>n("easy"),s.g.medium.onclick=()=>n("medium"),s.g.hard.onclick=()=>n("hard"),s.g.gen_6x6_easy.onclick=()=>n("6x6 easy"),s.g.gen_6x6_medium.onclick=()=>n("6x6 medium"),s.g.gen_6x6_hard.onclick=()=>n("6x6 hard"),s.g.levels.onclick=()=>{document.body.classList.remove("hide"),s.g.levels.classList.remove("enabled")}})()})();